generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model acc_reg_num {
  account_id Int    @default(0) @db.UnsignedInt
  key        String @default("") @db.VarChar(32)
  index      Int    @default(0) @db.UnsignedInt
  value      Int    @default(0)

  @@id([account_id, key, index])
  @@index([account_id], map: "account_id")
}

model acc_reg_str {
  account_id Int    @default(0) @db.UnsignedInt
  key        String @default("") @db.VarChar(32)
  index      Int    @default(0) @db.UnsignedInt
  value      String @default("0") @db.VarChar(254)

  @@id([account_id, key, index])
  @@index([account_id], map: "account_id")
}

model achievement {
  char_id   Int       @default(0) @db.UnsignedInt
  id        BigInt    @db.UnsignedBigInt
  count1    Int       @default(0) @db.UnsignedMediumInt
  count2    Int       @default(0) @db.UnsignedMediumInt
  count3    Int       @default(0) @db.UnsignedMediumInt
  count4    Int       @default(0) @db.UnsignedMediumInt
  count5    Int       @default(0) @db.UnsignedMediumInt
  count6    Int       @default(0) @db.UnsignedMediumInt
  count7    Int       @default(0) @db.UnsignedMediumInt
  count8    Int       @default(0) @db.UnsignedMediumInt
  count9    Int       @default(0) @db.UnsignedMediumInt
  count10   Int       @default(0) @db.UnsignedMediumInt
  completed DateTime? @db.DateTime(0)
  rewarded  DateTime? @db.DateTime(0)

  @@id([char_id, id])
  @@index([char_id], map: "char_id")
}

model auction {
  auction_id   BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  seller_id    Int    @default(0) @db.UnsignedInt
  seller_name  String @default("") @db.VarChar(30)
  buyer_id     Int    @default(0) @db.UnsignedInt
  buyer_name   String @default("") @db.VarChar(30)
  price        Int    @default(0) @db.UnsignedInt
  buynow       Int    @default(0) @db.UnsignedInt
  hours        Int    @default(0) @db.SmallInt
  timestamp    Int    @default(0) @db.UnsignedInt
  nameid       Int    @default(0) @db.UnsignedSmallInt
  item_name    String @default("") @db.VarChar(50)
  type         Int    @default(0) @db.SmallInt
  refine       Int    @default(0) @db.UnsignedTinyInt
  attribute    Int    @default(0) @db.UnsignedTinyInt
  card0        Int    @default(0) @db.UnsignedSmallInt
  card1        Int    @default(0) @db.UnsignedSmallInt
  card2        Int    @default(0) @db.UnsignedSmallInt
  card3        Int    @default(0) @db.UnsignedSmallInt
  option_id0   Int    @default(0) @db.SmallInt
  option_val0  Int    @default(0) @db.SmallInt
  option_parm0 Int    @default(0) @db.TinyInt
  option_id1   Int    @default(0) @db.SmallInt
  option_val1  Int    @default(0) @db.SmallInt
  option_parm1 Int    @default(0) @db.TinyInt
  option_id2   Int    @default(0) @db.SmallInt
  option_val2  Int    @default(0) @db.SmallInt
  option_parm2 Int    @default(0) @db.TinyInt
  option_id3   Int    @default(0) @db.SmallInt
  option_val3  Int    @default(0) @db.SmallInt
  option_parm3 Int    @default(0) @db.TinyInt
  option_id4   Int    @default(0) @db.SmallInt
  option_val4  Int    @default(0) @db.SmallInt
  option_parm4 Int    @default(0) @db.TinyInt
  unique_id    BigInt @default(0) @db.UnsignedBigInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model bonus_script {
  char_id Int     @db.UnsignedInt
  script  String  @db.Text
  tick    BigInt  @default(0)
  flag    Int     @default(0) @db.UnsignedSmallInt
  type    Boolean @default(false)
  icon    Int     @default(-1) @db.SmallInt

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model buyingstore_items {
  buyingstore_id Int @db.UnsignedInt
  index          Int @db.UnsignedSmallInt
  item_id        Int @db.UnsignedInt
  amount         Int @db.UnsignedSmallInt
  price          Int @db.UnsignedInt

  @@ignore
}

model buyingstores {
  id             Int              @id @db.UnsignedInt
  account_id     Int              @db.UnsignedInt
  char_id        Int              @db.UnsignedInt
  sex            buyingstores_sex @default(M)
  map            String           @db.VarChar(20)
  x              Int              @db.UnsignedSmallInt
  y              Int              @db.UnsignedSmallInt
  title          String           @db.VarChar(80)
  limit          Int              @db.UnsignedInt
  body_direction String           @default("4") @db.Char(1)
  head_direction String           @default("0") @db.Char(1)
  sit            String           @default("1") @db.Char(1)
  autotrade      Int              @db.TinyInt
}

model cart_inventory {
  id           Int    @id @default(autoincrement())
  char_id      Int    @default(0)
  nameid       Int    @default(0) @db.UnsignedSmallInt
  amount       Int    @default(0)
  equip        Int    @default(0) @db.UnsignedInt
  identify     Int    @default(0) @db.SmallInt
  refine       Int    @default(0) @db.UnsignedTinyInt
  attribute    Int    @default(0) @db.TinyInt
  card0        Int    @default(0) @db.UnsignedSmallInt
  card1        Int    @default(0) @db.UnsignedSmallInt
  card2        Int    @default(0) @db.UnsignedSmallInt
  card3        Int    @default(0) @db.UnsignedSmallInt
  option_id0   Int    @default(0) @db.SmallInt
  option_val0  Int    @default(0) @db.SmallInt
  option_parm0 Int    @default(0) @db.TinyInt
  option_id1   Int    @default(0) @db.SmallInt
  option_val1  Int    @default(0) @db.SmallInt
  option_parm1 Int    @default(0) @db.TinyInt
  option_id2   Int    @default(0) @db.SmallInt
  option_val2  Int    @default(0) @db.SmallInt
  option_parm2 Int    @default(0) @db.TinyInt
  option_id3   Int    @default(0) @db.SmallInt
  option_val3  Int    @default(0) @db.SmallInt
  option_parm3 Int    @default(0) @db.TinyInt
  option_id4   Int    @default(0) @db.SmallInt
  option_val4  Int    @default(0) @db.SmallInt
  option_parm4 Int    @default(0) @db.TinyInt
  expire_time  Int    @default(0) @db.UnsignedInt
  bound        Int    @default(0) @db.UnsignedTinyInt
  unique_id    BigInt @default(0) @db.UnsignedBigInt

  @@index([char_id], map: "char_id")
}

model char {
  char_id            Int       @id @default(autoincrement()) @db.UnsignedInt
  account_id         Int       @default(0) @db.UnsignedInt
  char_num           Boolean   @default(false)
  name               String    @unique(map: "name_key") @default("") @db.VarChar(30)
  class              Int       @default(0) @db.UnsignedSmallInt
  base_level         Int       @default(1) @db.UnsignedSmallInt
  job_level          Int       @default(1) @db.UnsignedSmallInt
  base_exp           BigInt    @default(0) @db.UnsignedBigInt
  job_exp            BigInt    @default(0) @db.UnsignedBigInt
  zeny               Int       @default(0) @db.UnsignedInt
  str                Int       @default(0) @db.UnsignedSmallInt
  agi                Int       @default(0) @db.UnsignedSmallInt
  vit                Int       @default(0) @db.UnsignedSmallInt
  int                Int       @default(0) @db.UnsignedSmallInt
  dex                Int       @default(0) @db.UnsignedSmallInt
  luk                Int       @default(0) @db.UnsignedSmallInt
  max_hp             Int       @default(0) @db.UnsignedInt
  hp                 Int       @default(0) @db.UnsignedInt
  max_sp             Int       @default(0) @db.UnsignedInt
  sp                 Int       @default(0) @db.UnsignedInt
  status_point       Int       @default(0) @db.UnsignedInt
  skill_point        Int       @default(0) @db.UnsignedInt
  option             Int       @default(0)
  karma              Int       @default(0) @db.TinyInt
  manner             Int       @default(0) @db.SmallInt
  party_id           Int       @default(0) @db.UnsignedInt
  guild_id           Int       @default(0) @db.UnsignedInt
  pet_id             Int       @default(0) @db.UnsignedInt
  homun_id           Int       @default(0) @db.UnsignedInt
  elemental_id       Int       @default(0) @db.UnsignedInt
  hair               Int       @default(0) @db.UnsignedTinyInt
  hair_color         Int       @default(0) @db.UnsignedSmallInt
  clothes_color      Int       @default(0) @db.UnsignedSmallInt
  body               Int       @default(0) @db.UnsignedSmallInt
  weapon             Int       @default(0) @db.UnsignedSmallInt
  shield             Int       @default(0) @db.UnsignedSmallInt
  head_top           Int       @default(0) @db.UnsignedSmallInt
  head_mid           Int       @default(0) @db.UnsignedSmallInt
  head_bottom        Int       @default(0) @db.UnsignedSmallInt
  robe               Int       @default(0) @db.UnsignedSmallInt
  last_map           String    @default("") @db.VarChar(11)
  last_x             Int       @default(53) @db.UnsignedSmallInt
  last_y             Int       @default(111) @db.UnsignedSmallInt
  save_map           String    @default("") @db.VarChar(11)
  save_x             Int       @default(53) @db.UnsignedSmallInt
  save_y             Int       @default(111) @db.UnsignedSmallInt
  partner_id         Int       @default(0) @db.UnsignedInt
  online             Int       @default(0) @db.TinyInt
  father             Int       @default(0) @db.UnsignedInt
  mother             Int       @default(0) @db.UnsignedInt
  child              Int       @default(0) @db.UnsignedInt
  fame               Int       @default(0) @db.UnsignedInt
  rename             Int       @default(0) @db.UnsignedSmallInt
  delete_date        Int       @default(0) @db.UnsignedInt
  moves              Int       @default(0) @db.UnsignedInt
  unban_time         Int       @default(0) @db.UnsignedInt
  font               Int       @default(0) @db.UnsignedTinyInt
  uniqueitem_counter Int       @default(0) @db.UnsignedInt
  sex                char_sex  @default(U)
  hotkey_rowshift    Int       @default(0) @db.UnsignedTinyInt
  clan_id            Int       @default(0) @db.UnsignedInt
  last_login         DateTime? @db.DateTime(0)
  title_id           Int       @default(0) @db.UnsignedInt
  show_equip         Int       @default(0) @db.UnsignedTinyInt

  @@index([account_id], map: "account_id")
  @@index([guild_id], map: "guild_id")
  @@index([online], map: "online")
  @@index([party_id], map: "party_id")
}

model char_reg_num {
  char_id Int    @default(0) @db.UnsignedInt
  key     String @default("") @db.VarChar(32)
  index   Int    @default(0) @db.UnsignedInt
  value   Int    @default(0)

  @@id([char_id, key, index])
  @@index([char_id], map: "char_id")
}

model char_reg_str {
  char_id Int    @default(0) @db.UnsignedInt
  key     String @default("") @db.VarChar(32)
  index   Int    @default(0) @db.UnsignedInt
  value   String @default("0") @db.VarChar(254)

  @@id([char_id, key, index])
  @@index([char_id], map: "char_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model charlog {
  time       DateTime @db.DateTime(0)
  char_msg   String   @default("char select") @db.VarChar(255)
  account_id Int      @default(0)
  char_num   Int      @default(0) @db.TinyInt
  name       String   @default("") @db.VarChar(23)
  str        Int      @default(0) @db.UnsignedInt
  agi        Int      @default(0) @db.UnsignedInt
  vit        Int      @default(0) @db.UnsignedInt
  int        Int      @default(0) @db.UnsignedInt
  dex        Int      @default(0) @db.UnsignedInt
  luk        Int      @default(0) @db.UnsignedInt
  hair       Int      @default(0) @db.TinyInt
  hair_color Int      @default(0)

  @@ignore
}

model clan {
  clan_id    Int    @id @default(autoincrement()) @db.UnsignedInt
  name       String @default("") @db.VarChar(24)
  master     String @default("") @db.VarChar(24)
  mapname    String @default("") @db.VarChar(24)
  max_member Int    @default(0) @db.UnsignedSmallInt
}

model clan_alliance {
  clan_id     Int    @default(0) @db.UnsignedInt
  opposition  Int    @default(0) @db.UnsignedInt
  alliance_id Int    @default(0) @db.UnsignedInt
  name        String @default("") @db.VarChar(24)

  @@id([clan_id, alliance_id])
  @@index([alliance_id], map: "alliance_id")
}

model db_roulette {
  index   Int @id @default(0)
  level   Int @db.UnsignedSmallInt
  item_id Int @db.UnsignedSmallInt
  amount  Int @default(1) @db.UnsignedSmallInt
  flag    Int @default(1) @db.UnsignedSmallInt
}

model elemental {
  ele_id    Int    @id @default(autoincrement()) @db.UnsignedInt
  char_id   Int
  class     Int    @default(0) @db.UnsignedMediumInt
  mode      Int    @default(1) @db.UnsignedInt
  hp        Int    @default(0) @db.UnsignedInt
  sp        Int    @default(0) @db.UnsignedInt
  max_hp    Int    @default(0) @db.UnsignedInt
  max_sp    Int    @default(0) @db.UnsignedInt
  atk1      Int    @default(0) @db.UnsignedMediumInt
  atk2      Int    @default(0) @db.UnsignedMediumInt
  matk      Int    @default(0) @db.UnsignedMediumInt
  aspd      Int    @default(0) @db.UnsignedSmallInt
  def       Int    @default(0) @db.UnsignedSmallInt
  mdef      Int    @default(0) @db.UnsignedSmallInt
  flee      Int    @default(0) @db.UnsignedSmallInt
  hit       Int    @default(0) @db.UnsignedSmallInt
  life_time BigInt @default(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model friends {
  char_id        Int @default(0)
  friend_account Int @default(0)
  friend_id      Int @default(0)

  @@index([char_id], map: "char_id")
  @@ignore
}

model global_acc_reg_num {
  account_id Int    @default(0) @db.UnsignedInt
  key        String @default("") @db.VarChar(32)
  index      Int    @default(0) @db.UnsignedInt
  value      Int    @default(0)

  @@id([account_id, key, index])
  @@index([account_id], map: "account_id")
}

model global_acc_reg_str {
  account_id Int    @default(0) @db.UnsignedInt
  key        String @default("") @db.VarChar(32)
  index      Int    @default(0) @db.UnsignedInt
  value      String @default("0") @db.VarChar(254)

  @@id([account_id, key, index])
  @@index([account_id], map: "account_id")
}

model guild {
  guild_id           Int       @unique(map: "guild_id") @default(autoincrement()) @db.UnsignedInt
  name               String    @default("") @db.VarChar(24)
  char_id            Int       @default(0) @db.UnsignedInt
  master             String    @default("") @db.VarChar(24)
  guild_lv           Int       @default(0) @db.UnsignedTinyInt
  connect_member     Int       @default(0) @db.UnsignedTinyInt
  max_member         Int       @default(0) @db.UnsignedTinyInt
  average_lv         Int       @default(1) @db.UnsignedSmallInt
  exp                BigInt    @default(0) @db.UnsignedBigInt
  next_exp           Int       @default(0) @db.UnsignedInt
  skill_point        Int       @default(0) @db.UnsignedTinyInt
  mes1               String    @default("") @db.VarChar(60)
  mes2               String    @default("") @db.VarChar(120)
  emblem_len         Int       @default(0) @db.UnsignedInt
  emblem_id          Int       @default(0) @db.UnsignedInt
  emblem_data        Bytes?    @db.Blob
  last_master_change DateTime? @db.DateTime(0)

  @@id([guild_id, char_id])
  @@index([char_id], map: "char_id")
}

model guild_alliance {
  guild_id    Int    @default(0) @db.UnsignedInt
  opposition  Int    @default(0) @db.UnsignedInt
  alliance_id Int    @default(0) @db.UnsignedInt
  name        String @default("") @db.VarChar(24)

  @@id([guild_id, alliance_id])
  @@index([alliance_id], map: "alliance_id")
}

model guild_castle {
  castle_id  Int @id @default(0) @db.UnsignedInt
  guild_id   Int @default(0) @db.UnsignedInt
  economy    Int @default(0) @db.UnsignedInt
  defense    Int @default(0) @db.UnsignedInt
  triggerE   Int @default(0) @db.UnsignedInt
  triggerD   Int @default(0) @db.UnsignedInt
  nextTime   Int @default(0) @db.UnsignedInt
  payTime    Int @default(0) @db.UnsignedInt
  createTime Int @default(0) @db.UnsignedInt
  visibleC   Int @default(0) @db.UnsignedInt
  visibleG0  Int @default(0) @db.UnsignedInt
  visibleG1  Int @default(0) @db.UnsignedInt
  visibleG2  Int @default(0) @db.UnsignedInt
  visibleG3  Int @default(0) @db.UnsignedInt
  visibleG4  Int @default(0) @db.UnsignedInt
  visibleG5  Int @default(0) @db.UnsignedInt
  visibleG6  Int @default(0) @db.UnsignedInt
  visibleG7  Int @default(0) @db.UnsignedInt

  @@index([guild_id], map: "guild_id")
}

model guild_expulsion {
  guild_id   Int    @default(0) @db.UnsignedInt
  account_id Int    @default(0) @db.UnsignedInt
  name       String @default("") @db.VarChar(24)
  mes        String @default("") @db.VarChar(40)

  @@id([guild_id, name])
}

model guild_member {
  guild_id   Int    @default(0) @db.UnsignedInt
  account_id Int    @default(0) @db.UnsignedInt
  char_id    Int    @default(0) @db.UnsignedInt
  hair       Int    @default(0) @db.UnsignedTinyInt
  hair_color Int    @default(0) @db.UnsignedSmallInt
  gender     Int    @default(0) @db.UnsignedTinyInt
  class      Int    @default(0) @db.UnsignedSmallInt
  lv         Int    @default(0) @db.UnsignedSmallInt
  exp        BigInt @default(0) @db.UnsignedBigInt
  exp_payper Int    @default(0) @db.UnsignedTinyInt
  online     Int    @default(0) @db.UnsignedTinyInt
  position   Int    @default(0) @db.UnsignedTinyInt
  name       String @default("") @db.VarChar(24)

  @@id([guild_id, char_id])
  @@index([char_id], map: "char_id")
}

model guild_position {
  guild_id Int    @default(0) @db.UnsignedInt
  position Int    @default(0) @db.UnsignedTinyInt
  name     String @default("") @db.VarChar(24)
  mode     Int    @default(0) @db.UnsignedSmallInt
  exp_mode Int    @default(0) @db.UnsignedTinyInt

  @@id([guild_id, position])
}

model guild_skill {
  guild_id Int @default(0) @db.UnsignedInt
  id       Int @default(0) @db.UnsignedSmallInt
  lv       Int @default(0) @db.UnsignedTinyInt

  @@id([guild_id, id])
}

model guild_storage {
  id           Int    @id @default(autoincrement()) @db.UnsignedInt
  guild_id     Int    @default(0) @db.UnsignedInt
  nameid       Int    @default(0) @db.UnsignedSmallInt
  amount       Int    @default(0) @db.UnsignedInt
  equip        Int    @default(0) @db.UnsignedInt
  identify     Int    @default(0) @db.UnsignedSmallInt
  refine       Int    @default(0) @db.UnsignedTinyInt
  attribute    Int    @default(0) @db.UnsignedTinyInt
  card0        Int    @default(0) @db.UnsignedSmallInt
  card1        Int    @default(0) @db.UnsignedSmallInt
  card2        Int    @default(0) @db.UnsignedSmallInt
  card3        Int    @default(0) @db.UnsignedSmallInt
  option_id0   Int    @default(0) @db.SmallInt
  option_val0  Int    @default(0) @db.SmallInt
  option_parm0 Int    @default(0) @db.TinyInt
  option_id1   Int    @default(0) @db.SmallInt
  option_val1  Int    @default(0) @db.SmallInt
  option_parm1 Int    @default(0) @db.TinyInt
  option_id2   Int    @default(0) @db.SmallInt
  option_val2  Int    @default(0) @db.SmallInt
  option_parm2 Int    @default(0) @db.TinyInt
  option_id3   Int    @default(0) @db.SmallInt
  option_val3  Int    @default(0) @db.SmallInt
  option_parm3 Int    @default(0) @db.TinyInt
  option_id4   Int    @default(0) @db.SmallInt
  option_val4  Int    @default(0) @db.SmallInt
  option_parm4 Int    @default(0) @db.TinyInt
  expire_time  Int    @default(0) @db.UnsignedInt
  bound        Int    @default(0) @db.UnsignedTinyInt
  unique_id    BigInt @default(0) @db.UnsignedBigInt

  @@index([guild_id], map: "guild_id")
}

model guild_storage_log {
  id           Int      @id @default(autoincrement())
  guild_id     Int      @default(0) @db.UnsignedInt
  time         DateTime @db.DateTime(0)
  char_id      Int      @default(0)
  name         String   @default("") @db.VarChar(24)
  nameid       Int      @default(0) @db.UnsignedSmallInt
  amount       Int      @default(1)
  identify     Int      @default(0) @db.SmallInt
  refine       Int      @default(0) @db.UnsignedTinyInt
  attribute    Int      @default(0) @db.UnsignedTinyInt
  card0        Int      @default(0) @db.UnsignedSmallInt
  card1        Int      @default(0) @db.UnsignedSmallInt
  card2        Int      @default(0) @db.UnsignedSmallInt
  card3        Int      @default(0) @db.UnsignedSmallInt
  option_id0   Int      @default(0) @db.SmallInt
  option_val0  Int      @default(0) @db.SmallInt
  option_parm0 Int      @default(0) @db.TinyInt
  option_id1   Int      @default(0) @db.SmallInt
  option_val1  Int      @default(0) @db.SmallInt
  option_parm1 Int      @default(0) @db.TinyInt
  option_id2   Int      @default(0) @db.SmallInt
  option_val2  Int      @default(0) @db.SmallInt
  option_parm2 Int      @default(0) @db.TinyInt
  option_id3   Int      @default(0) @db.SmallInt
  option_val3  Int      @default(0) @db.SmallInt
  option_parm3 Int      @default(0) @db.TinyInt
  option_id4   Int      @default(0) @db.SmallInt
  option_val4  Int      @default(0) @db.SmallInt
  option_parm4 Int      @default(0) @db.TinyInt
  expire_time  Int      @default(0) @db.UnsignedInt
  unique_id    BigInt   @default(0) @db.UnsignedBigInt
  bound        Boolean  @default(false)

  @@index([guild_id], map: "guild_id")
}

model homunculus {
  homun_id    Int    @id @default(autoincrement())
  char_id     Int
  class       Int    @default(0) @db.UnsignedMediumInt
  prev_class  Int    @default(0) @db.MediumInt
  name        String @default("") @db.VarChar(24)
  level       Int    @default(0) @db.SmallInt
  exp         BigInt @default(0) @db.UnsignedBigInt
  intimacy    Int    @default(0)
  hunger      Int    @default(0) @db.SmallInt
  str         Int    @default(0) @db.UnsignedSmallInt
  agi         Int    @default(0) @db.UnsignedSmallInt
  vit         Int    @default(0) @db.UnsignedSmallInt
  int         Int    @default(0) @db.UnsignedSmallInt
  dex         Int    @default(0) @db.UnsignedSmallInt
  luk         Int    @default(0) @db.UnsignedSmallInt
  hp          Int    @default(0) @db.UnsignedInt
  max_hp      Int    @default(0) @db.UnsignedInt
  sp          Int    @default(0)
  max_sp      Int    @default(0)
  skill_point Int    @default(0) @db.UnsignedSmallInt
  alive       Int    @default(1) @db.TinyInt
  rename_flag Int    @default(0) @db.TinyInt
  vaporize    Int    @default(0) @db.TinyInt
  autofeed    Int    @default(0) @db.TinyInt
}

model hotkey {
  char_id      Int
  hotkey       Int     @db.UnsignedTinyInt
  type         Boolean @default(false)
  itemskill_id Int     @default(0) @db.UnsignedInt
  skill_lvl    Int     @default(0) @db.UnsignedTinyInt

  @@id([char_id, hotkey])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model interlog {
  time DateTime @db.DateTime(0)
  log  String   @default("") @db.VarChar(255)

  @@ignore
}

model interreg {
  varname String @id @db.VarChar(11)
  value   String @db.VarChar(20)
}

model inventory {
  id           Int    @id @default(autoincrement()) @db.UnsignedInt
  char_id      Int    @default(0) @db.UnsignedInt
  nameid       Int    @default(0) @db.UnsignedSmallInt
  amount       Int    @default(0) @db.UnsignedInt
  equip        Int    @default(0) @db.UnsignedInt
  identify     Int    @default(0) @db.SmallInt
  refine       Int    @default(0) @db.UnsignedTinyInt
  attribute    Int    @default(0) @db.UnsignedTinyInt
  card0        Int    @default(0) @db.UnsignedSmallInt
  card1        Int    @default(0) @db.UnsignedSmallInt
  card2        Int    @default(0) @db.UnsignedSmallInt
  card3        Int    @default(0) @db.UnsignedSmallInt
  option_id0   Int    @default(0) @db.SmallInt
  option_val0  Int    @default(0) @db.SmallInt
  option_parm0 Int    @default(0) @db.TinyInt
  option_id1   Int    @default(0) @db.SmallInt
  option_val1  Int    @default(0) @db.SmallInt
  option_parm1 Int    @default(0) @db.TinyInt
  option_id2   Int    @default(0) @db.SmallInt
  option_val2  Int    @default(0) @db.SmallInt
  option_parm2 Int    @default(0) @db.TinyInt
  option_id3   Int    @default(0) @db.SmallInt
  option_val3  Int    @default(0) @db.SmallInt
  option_parm3 Int    @default(0) @db.TinyInt
  option_id4   Int    @default(0) @db.SmallInt
  option_val4  Int    @default(0) @db.SmallInt
  option_parm4 Int    @default(0) @db.TinyInt
  expire_time  Int    @default(0) @db.UnsignedInt
  favorite     Int    @default(0) @db.UnsignedTinyInt
  bound        Int    @default(0) @db.UnsignedTinyInt
  unique_id    BigInt @default(0) @db.UnsignedBigInt
  equip_switch Int    @default(0) @db.UnsignedInt

  @@index([char_id], map: "char_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model ipbanlist {
  list   String   @default("") @db.VarChar(15)
  btime  DateTime @db.DateTime(0)
  rtime  DateTime @db.DateTime(0)
  reason String   @default("") @db.VarChar(255)

  @@index([list], map: "list")
  @@ignore
}

model login {
  account_id      Int       @id @default(autoincrement()) @db.UnsignedInt
  userid          String    @unique(map: "name") @default("") @db.VarChar(23)
  user_pass       String    @default("") @db.VarChar(32)
  sex             login_sex @default(M)
  email           String    @default("") @db.VarChar(39)
  group_id        Int       @default(0) @db.TinyInt
  state           Int       @default(0) @db.UnsignedInt
  unban_time      Int       @default(0) @db.UnsignedInt
  expiration_time Int       @default(0) @db.UnsignedInt
  logincount      Int       @default(0) @db.UnsignedMediumInt
  lastlogin       DateTime? @db.DateTime(0)
  last_ip         String    @default("") @db.VarChar(100)
  birthdate       DateTime? @db.Date
  character_slots Int       @default(0) @db.UnsignedTinyInt
  pincode         String    @default("") @db.VarChar(4)
  pincode_change  Int       @default(0) @db.UnsignedInt
  vip_time        Int       @default(0) @db.UnsignedInt
  old_group       Int       @default(0) @db.TinyInt
}

model mail {
  id        BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  send_name String @default("") @db.VarChar(30)
  send_id   Int    @default(0) @db.UnsignedInt
  dest_name String @default("") @db.VarChar(30)
  dest_id   Int    @default(0) @db.UnsignedInt
  title     String @default("") @db.VarChar(45)
  message   String @default("") @db.VarChar(500)
  time      Int    @default(0) @db.UnsignedInt
  status    Int    @default(0) @db.TinyInt
  zeny      Int    @default(0) @db.UnsignedInt
  type      Int    @default(0) @db.SmallInt
}

model mail_attachments {
  id           BigInt  @default(autoincrement()) @db.UnsignedBigInt
  index        Int     @default(0) @db.UnsignedSmallInt
  nameid       Int     @default(0) @db.UnsignedSmallInt
  amount       Int     @default(0) @db.UnsignedInt
  refine       Int     @default(0) @db.UnsignedTinyInt
  attribute    Int     @default(0) @db.UnsignedTinyInt
  identify     Int     @default(0) @db.SmallInt
  card0        Int     @default(0) @db.UnsignedSmallInt
  card1        Int     @default(0) @db.UnsignedSmallInt
  card2        Int     @default(0) @db.UnsignedSmallInt
  card3        Int     @default(0) @db.UnsignedSmallInt
  option_id0   Int     @default(0) @db.SmallInt
  option_val0  Int     @default(0) @db.SmallInt
  option_parm0 Int     @default(0) @db.TinyInt
  option_id1   Int     @default(0) @db.SmallInt
  option_val1  Int     @default(0) @db.SmallInt
  option_parm1 Int     @default(0) @db.TinyInt
  option_id2   Int     @default(0) @db.SmallInt
  option_val2  Int     @default(0) @db.SmallInt
  option_parm2 Int     @default(0) @db.TinyInt
  option_id3   Int     @default(0) @db.SmallInt
  option_val3  Int     @default(0) @db.SmallInt
  option_parm3 Int     @default(0) @db.TinyInt
  option_id4   Int     @default(0) @db.SmallInt
  option_val4  Int     @default(0) @db.SmallInt
  option_parm4 Int     @default(0) @db.TinyInt
  unique_id    BigInt  @default(0) @db.UnsignedBigInt
  bound        Boolean @default(false)

  @@id([id, index])
}

model mapreg {
  varname String @db.VarChar(32)
  index   Int    @default(0) @db.UnsignedInt
  value   String @db.VarChar(255)

  @@id([varname, index])
}

model market {
  name   String @default("") @db.VarChar(50)
  nameid Int    @db.UnsignedSmallInt
  price  Int    @db.UnsignedInt
  amount Int    @db.UnsignedSmallInt
  flag   Int    @default(0) @db.UnsignedTinyInt

  @@id([name, nameid])
}

model memo {
  memo_id Int    @id @default(autoincrement()) @db.UnsignedInt
  char_id Int    @default(0) @db.UnsignedInt
  map     String @default("") @db.VarChar(11)
  x       Int    @default(0) @db.UnsignedSmallInt
  y       Int    @default(0) @db.UnsignedSmallInt

  @@index([char_id], map: "char_id")
}

model mercenary {
  mer_id       Int    @id @default(autoincrement()) @db.UnsignedInt
  char_id      Int
  class        Int    @default(0) @db.UnsignedMediumInt
  hp           Int    @default(0) @db.UnsignedInt
  sp           Int    @default(0) @db.UnsignedInt
  kill_counter Int
  life_time    BigInt @default(0)
}

model mercenary_owner {
  char_id     Int @id
  merc_id     Int @default(0)
  arch_calls  Int @default(0)
  arch_faith  Int @default(0)
  spear_calls Int @default(0)
  spear_faith Int @default(0)
  sword_calls Int @default(0)
  sword_faith Int @default(0)
}

model party {
  party_id    Int    @id @default(autoincrement()) @db.UnsignedInt
  name        String @default("") @db.VarChar(24)
  exp         Int    @default(0) @db.UnsignedTinyInt
  item        Int    @default(0) @db.UnsignedTinyInt
  leader_id   Int    @default(0) @db.UnsignedInt
  leader_char Int    @default(0) @db.UnsignedInt
}

model pet {
  pet_id      Int    @id @default(autoincrement()) @db.UnsignedInt
  class       Int    @default(0) @db.UnsignedMediumInt
  name        String @default("") @db.VarChar(24)
  account_id  Int    @default(0) @db.UnsignedInt
  char_id     Int    @default(0) @db.UnsignedInt
  level       Int    @default(0) @db.UnsignedSmallInt
  egg_id      Int    @default(0) @db.UnsignedSmallInt
  equip       Int    @default(0) @db.UnsignedMediumInt
  intimate    Int    @default(0) @db.UnsignedSmallInt
  hungry      Int    @default(0) @db.UnsignedSmallInt
  rename_flag Int    @default(0) @db.UnsignedTinyInt
  incubate    Int    @default(0) @db.UnsignedInt
  autofeed    Int    @default(0) @db.TinyInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model pvpm_data {
  id     Int    @default(0) @db.UnsignedInt
  name   String @default("") @db.VarChar(255)
  kills  Int    @default(0) @db.UnsignedInt
  dies   Int    @default(0) @db.UnsignedInt
  ratio  Int    @default(0) @db.UnsignedInt
  leader Int    @default(0) @db.UnsignedInt
  annc   Int    @default(0) @db.UnsignedInt
  ban    Int    @default(0) @db.UnsignedInt
  type   Int    @default(0) @db.UnsignedInt

  @@index([dies], map: "dies")
  @@index([id], map: "id")
  @@index([kills], map: "kills")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model pvpm_lang {
  id   Int    @default(0) @db.UnsignedInt
  lang Int    @default(0) @db.UnsignedInt
  str  String @default("") @db.VarChar(255)

  @@index([id], map: "id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model pvpm_map {
  id      Int    @default(0) @db.UnsignedInt
  map     String @default("NULL") @db.VarChar(255)
  type    Int    @default(0) @db.UnsignedInt
  noguild Int    @default(0)

  @@index([id], map: "id")
  @@ignore
}

model sales {
  nameid Int      @id @db.UnsignedSmallInt
  start  DateTime @db.DateTime(0)
  end    DateTime @db.DateTime(0)
  amount Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model sc_data {
  account_id Int    @db.UnsignedInt
  char_id    Int    @db.UnsignedInt
  type       Int    @db.UnsignedSmallInt
  tick       BigInt
  val1       Int    @default(0)
  val2       Int    @default(0)
  val3       Int    @default(0)
  val4       Int    @default(0)

  @@index([account_id], map: "account_id")
  @@index([char_id], map: "char_id")
  @@ignore
}

model skill {
  char_id Int     @default(0) @db.UnsignedInt
  id      Int     @default(0) @db.UnsignedSmallInt
  lv      Int     @default(0) @db.UnsignedTinyInt
  flag    Boolean @default(false)

  @@id([char_id, id])
}

model skill_homunculus {
  homun_id Int
  id       Int
  lv       Int @db.SmallInt

  @@id([homun_id, id])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model skillcooldown {
  account_id Int    @db.UnsignedInt
  char_id    Int    @db.UnsignedInt
  skill      Int    @default(0) @db.UnsignedSmallInt
  tick       BigInt

  @@index([account_id], map: "account_id")
  @@index([char_id], map: "char_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model sstatus {
  index Int    @default(0) @db.UnsignedTinyInt
  name  String @default("") @db.VarChar(255)
  user  Int    @default(0) @db.UnsignedInt

  @@ignore
}

model storage {
  id           Int    @id @default(autoincrement()) @db.UnsignedInt
  account_id   Int    @default(0) @db.UnsignedInt
  nameid       Int    @default(0) @db.UnsignedSmallInt
  amount       Int    @default(0) @db.UnsignedSmallInt
  equip        Int    @default(0) @db.UnsignedInt
  identify     Int    @default(0) @db.UnsignedSmallInt
  refine       Int    @default(0) @db.UnsignedTinyInt
  attribute    Int    @default(0) @db.UnsignedTinyInt
  card0        Int    @default(0) @db.UnsignedSmallInt
  card1        Int    @default(0) @db.UnsignedSmallInt
  card2        Int    @default(0) @db.UnsignedSmallInt
  card3        Int    @default(0) @db.UnsignedSmallInt
  option_id0   Int    @default(0) @db.SmallInt
  option_val0  Int    @default(0) @db.SmallInt
  option_parm0 Int    @default(0) @db.TinyInt
  option_id1   Int    @default(0) @db.SmallInt
  option_val1  Int    @default(0) @db.SmallInt
  option_parm1 Int    @default(0) @db.TinyInt
  option_id2   Int    @default(0) @db.SmallInt
  option_val2  Int    @default(0) @db.SmallInt
  option_parm2 Int    @default(0) @db.TinyInt
  option_id3   Int    @default(0) @db.SmallInt
  option_val3  Int    @default(0) @db.SmallInt
  option_parm3 Int    @default(0) @db.TinyInt
  option_id4   Int    @default(0) @db.SmallInt
  option_val4  Int    @default(0) @db.SmallInt
  option_parm4 Int    @default(0) @db.TinyInt
  expire_time  Int    @default(0) @db.UnsignedInt
  bound        Int    @default(0) @db.UnsignedTinyInt
  unique_id    BigInt @default(0) @db.UnsignedBigInt

  @@index([account_id], map: "account_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model vending_items {
  vending_id       Int @db.UnsignedInt
  index            Int @db.UnsignedSmallInt
  cartinventory_id Int @db.UnsignedInt
  amount           Int @db.UnsignedSmallInt
  price            Int @db.UnsignedInt

  @@ignore
}

model vendings {
  id             Int          @id @db.UnsignedInt
  account_id     Int          @db.UnsignedInt
  char_id        Int          @db.UnsignedInt
  sex            vendings_sex @default(M)
  map            String       @db.VarChar(20)
  x              Int          @db.UnsignedSmallInt
  y              Int          @db.UnsignedSmallInt
  title          String       @db.VarChar(80)
  body_direction String       @default("4") @db.Char(1)
  head_direction String       @default("0") @db.Char(1)
  sit            String       @default("1") @db.Char(1)
  autotrade      Int          @db.TinyInt
}

model quest {
  char_id  Int         @default(0) @db.UnsignedInt
  quest_id Int         @db.UnsignedInt
  time     Int         @default(0) @db.UnsignedInt
  count1   Int         @default(0) @db.UnsignedMediumInt
  count2   Int         @default(0) @db.UnsignedMediumInt
  count3   Int         @default(0) @db.UnsignedMediumInt

  @@id([char_id, quest_id])
}

enum buyingstores_sex {
  F
  M
}

enum char_sex {
  M
  F
  U
}

enum login_sex {
  M
  F
  S
}

enum vendings_sex {
  F
  M
}
